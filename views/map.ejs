<!DOCTYPE html>
<html>

<head>
    <title>Tracking Order</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <style>
        body {
            margin: 0;
            padding: 0;
        }
    </style>

</head>

<body>
    <div id="map" style="width:100%; height: 100vh"></div>
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- jQuery for AJAX requests -->

    <script>

        var map = L.map('map').setView([12.8437739, 74.8465571], 11);
        mapLink = "<a href='http://openstreetmap.org'>OpenStreetMap</a>";
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', { attribution: 'Leaflet &copy; ' + mapLink + ', contribution', maxZoom: 18 }).addTo(map);

        var taxiIcon = L.icon({
            iconUrl: 'https://www.pngmart.com/files/21/Food-Delivery-Scooter-PNG-Transparent.png',
            iconSize: [70, 70]
        })

        var marker = L.marker([12.8437739, 74.8465571], { icon: taxiIcon }).addTo(map);

        map.on('click', function (e) {
            console.log(e)
            var newMarker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);
            L.Routing.control({
                waypoints: [
                    L.latLng(e.latlng.lat, e.latlng.lng),
                    L.latLng(12.8437739, 74.8465571),
                ]
            }).on('routesfound', function (e) {
                var routes = e.routes;
                console.log(routes);

                e.routes[0].coordinates.forEach(function (coord, index) {
                    setTimeout(function () {
                        marker.setLatLng([coord.lat, coord.lng]);
                    }, 100 * index)
                })

                // Calculate delivery time
                var distance = e.routes[0].summary.totalDistance; // Get total distance of the route
                var estimatedDeliveryTime = calculateDeliveryTime(distance); // Calculate estimated delivery time
                console.log("Estimated delivery time: " + estimatedDeliveryTime);

                // Fetch weather information
                fetchWeatherInfo(12.8437739, 74.8465571);
            }).addTo(map);
        });

        // Function to calculate estimated delivery time
        function calculateDeliveryTime(distance) {
            // Perform calculations based on distance, traffic, weather, etc.
            // Return the estimated delivery time
            // This can be a simple estimation or more sophisticated algorithm based on your requirements
        }

        // Function to fetch weather information using AJAX
        function fetchWeatherInfo(latitude, longitude) {
            var apiKey = '1ec6e0b46f20a0f70ed298bf60f3c57d'; // Your weather API key
            var apiUrl = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + apiKey;

            $.ajax({
                url: apiUrl,
                method: 'GET',
                success: function (response) {
                    // Process weather data and display it on the map interface
                    console.log(response);
                    // Example: Display weather information in a popup
                    marker.bindPopup("Weather: " + response.weather[0].main).openPopup();
                },
                error: function (error) {
                    console.error("Error fetching weather data: " + error);
                }
            });
        }

    </script>


</body>

</html>
